{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACxBF,EAAQG,iBACvB,IAAIC,EACAC,EACAC,EAEJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA6BbT,EAAQiB,iBAAiB,UAxBzB,SAAoBC,GAClBA,EAAMC,iBACNf,EAAagB,OAAOF,EAAMG,cAAcC,SAASb,MAAMc,OACvDlB,EAAYe,OAAOF,EAAMG,cAAcC,SAASE,KAAKD,OACrDjB,EAAcc,OAAOF,EAAMG,cAAcC,SAASG,OAAOF,OAEzD,IAAK,IAAIG,EAAI,EAAGA,GAAKpB,EAAaoB,GAAK,EACrCnB,EAAcmB,EAAGtB,GACduB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAEjBmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAElBmB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAInDL,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst btnRef = formRef.lastElementChild;\nlet delayValue;\nlet stepValue;\nlet amountValue;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  delayValue = Number(event.currentTarget.elements.delay.value);\n  stepValue = Number(event.currentTarget.elements.step.value);\n  amountValue = Number(event.currentTarget.elements.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayValue += stepValue;\n  }\n}\nformRef.addEventListener('submit', formSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","lastElementChild","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","currentTarget","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e213fcd7.js.map"}